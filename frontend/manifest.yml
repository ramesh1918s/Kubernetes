# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: frontend
#   namespace: expense
# data:
#   DB_HOST: mysql # mysql component service name
# # DB_HOST: db-dev.daws78s.online (DNS)
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend
  namespace: expense
data:
  nginx.conf: "user www-data;\nworker_processes 4;\npid /var/run/nginx.pid;\n\nevents {\n  worker_connections 768;\n  # multi_accept on;\n}\n\nhttp {\n\n  ##\n  # Basic Settings\n  ##\n\n  sendfile on;\n  tcp_nopush on;\n  tcp_nodelay on;\n  keepalive_timeout 65;\n  types_hash_max_size 2048;\n  large_client_header_buffers 6 32k;\n  client_max_body_size 100m;\n\n  # server_names_hash_bucket_size 64;\n  # server_name_in_redirect off;\n  include /etc/nginx/mime.types;\n  default_type application/octet-stream;\n\n  ##\n  # Logging Settings\n  ##\n  access_log /var/log/nginx/access.log;\n  error_log /var/log/nginx/error.log debug; # change from debug to warn or error for production\n\n  ##\n  # Gzip Settings\n  ##\n  gzip on;\n  gzip_disable \"msie6\";\n\n  ##\n  # Virtual Host Configs\n  ##\n\n  include /etc/nginx/conf.d/*.conf;\n  include /etc/nginx/sites-enabled/*;\n\n  server {\n    listen       8080;\n    server_name  localhost;\n\n    proxy_http_version 1.1;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n    #error_log /dev/stdout debug;\n    #rewrite_log on;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n        ssi    on;\n    }\n\n    location /images/ {\n        expires 5s;\n        root   /usr/share/nginx/html;\n        try_files $uri /images/placeholder.png;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    location /api/ { \n        proxy_pass http://backend:8080/;\n    }\n\n    }\n\n}\n"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  labels:
    component: frontend
    project: expense
    tier: web
spec:
  replicas: 2
  selector:
    matchLabels:
      component: frontend
      project: expense
      tier: web
  template:
    metadata:
      labels:
        component: frontend
        project: expense
        tier: web
    spec:
      containers:
        - name: frontend
          image: joindevops/frontend:v1.0
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
          # envFrom:
      #   - configMapRef:
      #       name: frontend
      # Uncomment if needed later:
      volumes:
        - name: nginx-conf
          configMap:
            name: frontend
            items:
              - key: nginx.conf
                path: nginx.conf
# readinessProbe:

#   tcpSocket:
#     port: 3306
#   initialDelaySeconds: 10
#   periodSeconds: 5
# livenessProbe:
#   tcpSocket:
#     port: 3306
#   initialDelaySeconds: 10
#   periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: expense
spec:
  type: LoadBalancer
  selector:
    component: frontend
    project: expense
    tier: web
  ports:
    - protocol: TCP
      port: 80 # service port
      targetPort: 8080 # container port
